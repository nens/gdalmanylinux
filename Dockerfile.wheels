# An image for building manylinux1 wheels equivalent to those that
# https://github.com/sgillies/frs-wheel-builds makes for macosx.
#
# TODO: Figure out how to make the builds for osx!
#
# Note well: a very limited set of format drivers are included in these
# wheels. See the GDAL configuration below for details.

FROM quay.io/pypa/manylinux1_x86_64

RUN yum update -y && yum install -y curl-devel json-c-devel

# Install geos
RUN mkdir -p /src \
    && cd /src \
    && curl -f -L -O http://download.osgeo.org/geos/geos-3.6.2.tar.bz2 \
    && tar jxf geos-3.6.2.tar.bz2 \
    && cd /src/geos-3.6.2 \
    && ./configure \
    && make \
    && make install \
    && rm -rf /src

# Install jasper
RUN mkdir -p /src \
    && cd /src \
    && curl -f -L -O http://download.osgeo.org/gdal/jasper-1.900.1.uuid.tar.gz \
    && tar xzf jasper-1.900.1.uuid.tar.gz \
    && cd /src/jasper-1.900.1.uuid \
    && ./configure --disable-debug --enable-shared \
    && make \
    && make install \
    && rm -rf /src

# proj4
RUN mkdir -p /src \
    && cd /src \
    && curl -f -L -O http://download.osgeo.org/proj/proj-4.9.3.tar.gz \
    && tar xzf proj-4.9.3.tar.gz \
    && cd /src/proj-4.9.3 \
    && ./configure \
    && make \
    && make install \
    && rm -rf /src

# gdal
RUN mkdir -p /src \
    && cd /src \
    && curl -f -L -O http://download.osgeo.org/gdal/2.2.4/gdal-2.2.4.tar.gz \
    && tar xzf gdal-2.2.4.tar.gz \
    && cd /src/gdal-2.2.4 \
    && ./configure \
        --with-threads \
        --disable-debug \
        --disable-static \
        --without-grass \
        --without-libgrass \
        --without-jpeg12 \
        --with-jasper=/usr/local \
        --with-libtiff=internal \
        --with-jpeg \
        --with-gif \
        --with-png \
        --with-geotiff=internal \
        --with-sqlite3=/usr \
        --with-pcraster=internal \
        --with-pcraster=internal \
        --with-pcidsk=internal \
        --with-bsb \
        --with-grib \
        --with-pam \
        --with-geos=/usr/local/bin/geos-config \
        --with-static-proj4=/usr/local \
        --with-expat=/usr \
        --with-libjson-c \
        --with-libiconv-prefix=/usr \
        --with-libz=/usr \
        --with-curl=curl-config \
        --without-python \
    && make \
    && make install

# Bake dev requirements into the Docker image for faster builds
ADD requirements.txt /tmp/requirements.txt
RUN for PYBIN in /opt/python/*/bin; do \
        if [[ $PYBIN == *"26"* ]]; then continue; fi; \
        if [[ $PYBIN == *"33"* ]]; then continue; fi; \
        $PYBIN/pip install -r /tmp/requirements.txt ; \
    done

# Patch SWIG's setup.py, which gets numpy in there as a dependency.
ADD setup.py /src/gdal-2.2.4/swig/python/setup.py

# Replace the osgeo module __init__.py with this modified one, which
# sets the GDAL_DATA and PROJ_LIB variables on import to where they've
# been copied to.
ADD gdalinit.py /src/gdal-2.2.4/swig/python/osgeo/__init__.py

WORKDIR /io
CMD ["/io/build-linux-wheels.sh"]
